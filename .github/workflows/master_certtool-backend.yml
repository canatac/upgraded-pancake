name: CI/CD

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  deploy:
    runs-on: ubuntu-latest

    # needs: [build]

    permissions:
      id-token: write # required to use OIDC authentication
      contents: read # required to checkout the code from the repo

    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Log in to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: canatac/certtool:latest

      - name: Deploy to server via SSH
        uses: appleboy/ssh-action@v1.0.1
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          passphrase: ${{ secrets.SSH_PASSPHRASE }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          fingerprint: ${{ secrets.SERVER_FINGERPRINT }}
          envs: SMTP_HOST, API_KEY, SECRET_KEY, NOREPLY_EMAIL_ADDRESS, VERIFY_URL
          script: |
            function add_env_var {
              VAR_NAME=$1
              VAR_VALUE=$2
              grep -q "export $VAR_NAME=" ~/.bashrc || echo "export $VAR_NAME=$VAR_VALUE" >> ~/.bashrc
            }
            add_env_var "SMTP_HOST" "${{secrets.SMTP_HOST}}"
            add_env_var "API_KEY" "${{secrets.API_KEY}}"
            add_env_var "SECRET_KEY" "${{secrets.SECRET_KEY}}"
            add_env_var "NOREPLY_EMAIL_ADDRESS" "${{secrets.NOREPLY_EMAIL_ADDRESS}}"
            add_env_var "VERIFY_URL" "${{secrets.VERIFY_URL}}"
            source ~/.bashrc
            CI=true docker login -u ${{ secrets.DOCKER_HUB_USERNAME }} -p ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
            CI=true docker stop certtool
            CI=true docker system prune -af
            CI=true docker pull canatac/certtool:latest
            CI=true docker run --name=certtool -d -p 8000:8000 -e SMTP_HOST=$SMTP_HOST -e API_KEY=$API_KEY -e SECRET_KEY=$SECRET_KEY -e NOREPLY_EMAIL_ADDRESS=$NOREPLY_EMAIL_ADDRESS -e VERIFY_URL=$VERIFY_URL canatac/certtool:latest